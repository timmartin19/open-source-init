from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals

import keyring
from getpass import getpass
import os

from git import Repo
from github import Github


def create_repo(token, repo_name, path):
    github = Github(token)
    user = github.get_user()
    repo = user.create_repo(repo_name, private=False)
    init_repo_and_push(path, repo.ssh_url)
    return repo.full_name


def init_repo_and_push(path, remote):
    try:
        print('repo')
        repo = Repo(path)
    except Exception as e:
        print(e)
        print('here')
        repo = Repo.init(path)

    path = '{0}/'.format(path.rstrip('/'))
    gitkeep_path = os.path.join(path, '.gitkeep')
    os.system('touch {0}'.format(gitkeep_path))

    os.chdir(path)
    os.system('git add .')
    os.system('git commit -m "Autogenerated initial commit"')

    repo = Repo(path)
    origin_remote = repo.create_remote('origin', remote)
    origin_remote.push('master', set_upstream=True)


def get_github_token(refresh=False):
    system = 'open-source-init'
    username = 'github-token'
    password = None
    if not refresh:
        password = keyring.get_password(system, username)
    if password is None:
        password = getpass('Github Token')
        keyring.set_password(system, username, password)
    return password
